---
export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{title} - Yuwang Cai</title>
  <meta name="description" content={description} />
  <link rel="icon" href="/logo.svg" />

  <!-- Open Graph -->
  <meta property="og:title" content={title} />
  <meta property="og:type" content="profile" />
  <meta property="profile:first_name" content="Yuwang" />
  <meta property="profile:last_name" content="Cai" />
  <meta property="profile:username" content="mrcaidev" />
  <meta property="profile:gender" content="male" />
  <meta property="og:image" content="https://og.mrcai.dev/api/home" />
  <meta property="og:image:type" content="image/png" />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  <meta
    property="og:image:alt"
    content="Logo on the left, mrcai.dev on the right."
  />
  <meta property="og:url" content={Astro.url.href} />
  <meta property="og:description" content={description} />
  <meta property="og:locale" content="en_US" />

  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:site" content="@mrcaidev" />
  <meta name="twitter:creator" content="@mrcaidev" />

  <!-- Prevent FOUC -->
  <script is:inline>
    try {
      const userTheme = localStorage.getItem("theme");
      const isDarkOs = matchMedia("(prefers-color-scheme: dark)").matches;
      const isDark = userTheme === "dark" || (!userTheme && isDarkOs);

      const html = document.documentElement;
      if (isDark) {
        html.classList.add("dark");
      } else {
        html.classList.remove("dark");
      }
    } catch {
      // Do nothing.
    }
  </script>
</head>
